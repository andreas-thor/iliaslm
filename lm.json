{
	"title": "DBS Lernmodul (aus JSON erzeugt)",
	"chapter": [
		{
			"name": "01_INTRO",
			"title": "01 INTRO: Einführung",
			"page": [
				{
					"name": "overview",
					"title": "Übersicht",
					"outcome": [
						"Vorteile der Datenhaltung mittels Datenbanksystemen gegenüber Dateisystemen zu erklären",
						"die wesentlichen Eigenschaften relationaler Datenbanksysteme zu erläutern",
						"das Transaktionskonzept und die Transaktionseigenschaften (ACID) an einem Beispiel darzustellen",
						"praktische Einsatzszenarien den DBS-Einsatzformen OLTP und OLAP zuzuordnen"
					]
				},
				{
					"name": "Datenbanksystem",
					"title": "Datenbankystem"
				},
				{
					"name": "Relationenmodell_Beispiel",
					"title": "Relationenmodell (Beispiel)",
					"question": [
						{
							"type": "gap",
							"text": "Wir betrachten die Tabelle Student. Geben Sie für die folgenden Elemente an, ob es sich um Metadaten oder Instanzdaten handelt!\n\n* Tabellenname Student: |*Metadaten; Instanzdaten|\n* Attributwert 101 für Student Schmidt: |Metadaten; *Instanzdaten|\n* Attributname W-Ort: |*Metadaten; Instanzdaten|\n* Attributwerte des letzten Datensatzes: |Metadaten; *Instanzdaten|"
						},
						{
							"type": "gap",
							"text": "Geben Sie für jede der Anfragen an, wieviele Tabellen zur Beantwortung verwendet werden!\n\n* Liste der Namen aller Studenten: |*1;2;3;4|\n* Liste der Büros aller Professoren aus dem Wirtschafts-Department: |1;*2;3;4|\n* Namen der Studenten, die von einem Professor aus dem Wirtschafts-Department mit der Note 1.3 geprüft wurden? |1;2;3;*4|"
						}
					]
				},
				{
					"name": "Drei_Schema_Architektur",
					"title": "Drei-Schema-Architektur"
				},
				{
					"name": "Transaktion_Beispiel",
					"title": "Transaktion (Beispiel)"
				},
				{
					"name": "DBS_Nutzer",
					"title": "Datenbank-Nutzer",
					"question": [
						{
							"type": "gap",
							"text": "Ordnen Sie die folgenden Eigenschaften dem jeweiligen Nutzer zu!\n\n* Hat mit seinem Domänenwissen die Datenbank modelliert, d.h. Tabellen erstellt: |Endbenutzer von DB-Anwendungen; Anwendungsprogrammierer; DB-Analyst; *DB-Modellierer; DB-Administrator; DBMS-Implementierer|\n* Kennt den Aufbau der Datenbank (Tabellen, Attribute) und erstellt SQL-Anfragen: |Endbenutzer von DB-Anwendungen; *Anwendungsprogrammierer; DB-Analyst; DB-Modellierer; DB-Administrator; DBMS-Implementierer|\n* Benötigt keine Datenbankkenntnisse: |*Endbenutzer von DB-Anwendungen; Anwendungsprogrammierer; DB-Analyst; DB-Modellierer; DB-Administrator; DBMS-Implementierer|\n* Analysiert Anfragen und Datenmengen und optimiert ggf. die Datenbank: |Endbenutzer von DB-Anwendungen; Anwendungsprogrammierer; *DB-Analyst; DB-Modellierer; DB-Administrator; DBMS-Implementierer|\n* Hat das DBMS (z.B. DB2) implementiert: |Endbenutzer von DB-Anwendungen; Anwendungsprogrammierer; DB-Analyst; DB-Modellierer; DB-Administrator; *DBMS-Implementierer|\n* Kümmert sich um die Nutzer- und Rechte-Verwaltung: |Endbenutzer von DB-Anwendungen; Anwendungsprogrammierer; DB-Analyst; DB-Modellierer; *DB-Administrator; DBMS-Implementierer|"
						}
					]
				}
			]
		},
		{
			"name": "02_RM",
			"title": "02 RM: Das Relationale Modell",
			"page": [
				{
					"name": "overview",
					"title": "Übersicht",
					"outcome": [
						"Aufbau und Eigenschaften einer Relation zu erläutern",
						"Bedeutung und Funktionsweise von Primär- und Fremdschlüsseln darzustellen",
						"Relationen mittels Primär- und Fremdschlüsseln zu verknüpfen",
						"die verschiedenen Arten von Löschregeln und ihre Funktionsweise an konkreten Beispielen umzusetzen"
					]
				},
				{
					"name": "Relationen_in_Tabellendarstellung",
					"title": "Relation in Tabellendarstellung",
					"question": [
						{
							"type": "gap",
							"text": "Beantworten Sie die folgenden Fragen zur dargestellten Relation PROFESSOR!\n\n* Was ist die Kardinalität der Relation? |1;2;3;*4;5;6;7;8;9;20;25;26|\n* Was ist der Grad der Relation? |1;2;3;4;*5;6;7;8;9;20;25;26|\n* Was ist der Wertebereich (Domäne) des Attributs PNr? |*INTEGER (ganze Zahl); VARCHAR (Zeichenkette)|"
						},
						{
							"type": "gap",
							"text": "Beantworten Sie die folgenden Fragen zur dargestellten Relation STUDENT!\n\n* Was ist die Kardinalität der Relation? |1;2;3;4;*5;6;7;8;9;20;25;26|\n* Was ist der Grad der Relation? |1;2;*3;4;5;6;7;8;9;20;25;26|\n* Welches Attribut hat einen NULL-Wert? |MatNr; SName; *W-Ort; 104; Krause|\n* Was ist der Wertebereich (Domäne) des Attributs W-Ort? |INTEGER (ganze Zahl); *VARCHAR (Zeichenkette)|"
						}
					]
				},
				{
					"name": "Schluesselkandidat",
					"title": "Schlüsselkandidat",
					"question": [
						{
							"type": "mc",
							"text": "Markieren Sie alle Schlüsselkandidaten der Relation PROFESSOR!| Büro; DPT; PName;  PName + Büro; *PNr; PNr + PName; *Telefon"
						},
						{
							"type": "mc",
							"text": "Markieren Sie alle Schlüsselkandidaten der Relation STUDENT!| *MatNr; MatNr + SName; SName; SName + W-Ort; W-Ort"
						}
					]
				},
				{
					"name": "Primaerschluessel",
					"title": "Primärschlüssel",
					"question": [
						{
							"type": "mc",
							"text": "Markieren Sie die korrekten Aussagen bzgl. der dargestellten Relation PROFESSOR mit dem Primärschlüssel PNr.\n\nDie dargestellte Relation PROFESSOR ist... | nicht gültig, da es Tupel mit NULL-Werten gibt; nicht gültig, da es mehrere Tupel mit gleichem Primärschlüssel-Wert gibt. ; *gültig"
						},
						{
							"type": "mc",
							"text": "Markieren Sie die korrekten Aussagen bzgl. der dargestellten Relation STUDENT mit dem Primärschlüssel MatNr.\n\nDie dargestellte Relation STUDENT ist... | *nicht gültig, da es mehrere Tupel mit gleichem Primärschlüssel-Wert gibt; nicht gültig, da für Student Krause der W-Ort einen NULL-Wert hat; *nicht gültig, da ein Tupel einen NULL-Wert für den Primärschlüssel hat.; gültig."
						}
					]
				},
				{
					"name": "Fremdschluessel",
					"title": "Fremdschlüssel",
					"question": [
						{
							"type": "gap",
							"text": "Geben Sie für die nachfolgenden Attribute der Relation DEPARTMENT an, ob Sie Fremdschlüssel sind. Falls ja, geben Sie den zugehörigen Primärschlüssel an.\n\n* ID: | *kein Fremdschlüssel; Fremdschlüssel auf DEPARTMENT.ID; Fremdschlüssel auf PROFESSOR.PNr; Fremdschlüssel auf STUDENT.MatNr |\n* DName: | *kein Fremdschlüssel; Fremdschlüssel auf DEPARTMENT.ID; Fremdschlüssel auf PROFESSOR.PNr; Fremdschlüssel auf STUDENT.MatNr |\n* Leiter: | kein Fremdschlüssel; Fremdschlüssel auf DEPARTMENT.ID; *Fremdschlüssel auf PROFESSOR.PNr; Fremdschlüssel auf STUDENT.MatNr |"
						},
						{
							"type": "gap",
							"text": "Geben Sie für die nachfolgenden Attribute der Relation PROFESSOR an, ob Sie Fremdschlüssel sind. Falls ja, geben Sie den zugehörigen Primärschlüssel an.\n\n* PNr: | *kein Fremdschlüssel; Fremdschlüssel auf DEPARTMENT.ID; Fremdschlüssel auf PROFESSOR.PNr; Fremdschlüssel auf STUDENT.MatNr |\n* PName: | *kein Fremdschlüssel; Fremdschlüssel auf DEPARTMENT.ID; Fremdschlüssel auf PROFESSOR.PNr; Fremdschlüssel auf STUDENT.MatNr |\n* Dept: | kein Fremdschlüssel; *Fremdschlüssel auf DEPARTMENT.ID; Fremdschlüssel auf PROFESSOR.PNr; Fremdschlüssel auf STUDENT.MatNr |"
						},
						{
							"type": "gap",
							"text": "Geben Sie für die nachfolgenden Attribute der Relation STUDENT an, ob Sie Fremdschlüssel sind. Falls ja, geben Sie den zugehörigen Primärschlüssel an.\n\n* MatNr: | *kein Fremdschlüssel; Fremdschlüssel auf DEPARTMENT.ID; Fremdschlüssel auf PROFESSOR.PNr; Fremdschlüssel auf STUDENT.MatNr |\n* SName: | *kein Fremdschlüssel; Fremdschlüssel auf DEPARTMENT.ID; Fremdschlüssel auf PROFESSOR.PNr; Fremdschlüssel auf STUDENT.MatNr |\n* W-Ort: | *kein Fremdschlüssel; Fremdschlüssel auf DEPARTMENT.ID; Fremdschlüssel auf PROFESSOR.PNr; Fremdschlüssel auf STUDENT.MatNr |"
						},
						{
							"type": "gap",
							"text": "Geben Sie für die nachfolgenden Attribute der Relation PRÜFUNG an, ob Sie Fremdschlüssel sind. Falls ja, geben Sie den zugehörigen Primärschlüssel an.\n\n* PNr: | kein Fremdschlüssel; Fremdschlüssel auf DEPARTMENT.ID; *Fremdschlüssel auf PROFESSOR.PNr; Fremdschlüssel auf STUDENT.MatNr |\n* MatNr: | kein Fremdschlüssel; Fremdschlüssel auf DEPARTMENT.ID; Fremdschlüssel auf PROFESSOR.PNr; *Fremdschlüssel auf STUDENT.MatNr |\n* Fach: | *kein Fremdschlüssel; Fremdschlüssel auf DEPARTMENT.ID; Fremdschlüssel auf PROFESSOR.PNr; Fremdschlüssel auf STUDENT.MatNr |"
						}
					]
				},
				{
					"name": "Relationenmodell_in_SQL",
					"title": "Relationenmodell in SQL"
				},
				{
					"name": "Wartung_Referentielle_Integritaet_Beispiel",
					"title": "Wartung Referentielle Integrität",
					"question": [
						{
							"type": "gap",
							"text": "Geben Sie die Auswirkung der Operation \"DELETE FROM Student WHERE MatNr=101\" für jede der drei Löschregeln an:\n\n* NO ACTION: | Nur der Student Schmidt wird gelöscht.; Nur beide Prüfungen vom Studenten Schmidt werden gelöscht.; Student Schmidt und seine beiden Prüfungen werden gelöscht.; Student Schmidt wird gelöscht und die MatNr bei seinen Prüfungen wird auf NULL gesetzt.; *Es wird nichts gelöscht. |\n* CASCADE: | Nur der Student Schmidt wird gelöscht.; Nur beide Prüfungen vom Studenten Schmidt werden gelöscht.; *Student Schmidt und seine beiden Prüfungen werden gelöscht.; Student Schmidt wird gelöscht und die MatNr bei seinen Prüfungen wird auf NULL gesetzt.; Es wird nichts gelöscht. |\n* SET NULL: | Nur der Student Schmidt wird gelöscht.; Nur beide Prüfungen vom Studenten Schmidt werden gelöscht.; Student Schmidt und seine beiden Prüfungen werden gelöscht.; Student Schmidt wird gelöscht und die MatNr bei seinen Prüfungen wird auf NULL gesetzt.; *Es wird nichts gelöscht. |"
						}
					]
				}
			]
		},
		{
			"name": "03_SQL-1",
			"title": "03 SQL-1: Datenbanksprache SQL (Teil 1)",
			"page": [
				{
					"name": "overview",
					"title": "Übersicht",
					"outcome": [
						"den grundsätzlichen Aufbau einfacher SQL-SELECT-Anweisungen zu erklären (Attributauswahl in SELECT, WHERE-Bedignung, JOIN)",
						"das Ergebnis von SQL-SELECT-Anweisungen für gegebene Relationen zu berechnen",
						"die unterschiedlichen JOIN-Arten zu erklären",
						"SQL-SELECT-Anweisungen zu formulieren"
					]
				},
				{
					"name": "Einfache_Selektionen_und_Projektionen",
					"title": "Selektion und Projektion",
					"question": [
						{
							"type": "gap",
							"text": "Was berechnen jeweils die folgenden SQL-Anfragen? \n\n <code>SELECT name FROM verlag</code> | *Name aller Verlage; Name aller Berliner Verlage; Name und Ort aller Berliner Verlage; Ort aller Verlage| \n\n <code>SELECT name FROM verlag WHERE ort = \"Berlin\"</code> | Name aller Verlage; *Name aller Berliner Verlage; Name und Ort aller Berliner Verlage; Ort aller Verlage| \n\n <code>SELECT titel FROM buch WHERE jahr > 1990</code> | Titel der Bücher, die vor 1990 erschienen sind; Titel der Bücher, die 1990 erschienen sind; *Titel der Bücher, die nach 1990 erschienen sind | \n\n"
						},
						{
							"type": "gap",
							"text": "Welche SQL-Anfrage berechnet jeweils die folgenden Ergebnisse?\n\n<code>Name\n-------------------\nLunetIX SoftAir\nAkademie Verl.\nSchmidt</code>\n | SELECT name FROM verlag; SELECT name FROM verlage WHERE \"Berlin\"; *SELECT name FROM verlage WHERE ort=\"Berlin\"; SELECT ort FROM verlag | \n\n<code>Titel\n------------------\nExcel\nGrundlagen\nPC Tools\nInfo für Ing.\nJava</code>\n | SELECT titel FROM buch; SELECT titel, jahr FROM buch WHERE jahr>1990; *SELECT titel FROM buch WHERE jahr>1990; SELECT jahr>1990 FROM buch"
						}
					]
				},
				{
					"name": "Sortierung",
					"title": "Sortierung",
					"question": [
						{
							"type": "gap",
							"text": "Ordnen Sie den folgenden SQL-Ergebnissen (d.h. Ergebnis-Tabellen) diejenigen SQL-Anfragen zu, die dieses Ergebnis produzieren! \nHinweis: Alle Anfragen beginnen mit \"SELECT titel, jahr FROM buch WHERE jahr > 1990\" und werden dann durch eine ORDER-BY-Klausel ergänzt. Wählen Sie daher die korrekte ORDER-BY-Klausel aus!\n<code>\nTitel ······· + Jahr\n --------------+-----\n Excel ······· + 1991\n Grundlagen ·· + 1991\n Info für Ing. + 1995\n Java ········ + 1996\n PC Tools ···· + 1993</code>\n|*ORDER BY titel ASC; ORDER BY titel DESC; ORDER BY jahr ASC, titel ASC; ORDER BY jahr ASC, titel DESC; ORDER BY jahr DESC, titel ASC; ORDER BY jahr DESC, titel DESC|  \n<code>\nTitel ······· + Jahr\n --------------+-----\n PC Tools ···· + 1993\n Java ········ + 1996\n Info für Ing. + 1995\n Grundlagen ·· + 1991\n Excel ······· + 1991</code>\n|ORDER BY titel ASC; *ORDER BY titel DESC; ORDER BY jahr ASC, titel ASC; ORDER BY jahr ASC, titel DESC; ORDER BY jahr DESC, titel ASC; ORDER BY jahr DESC, titel DESC|  \n<code>\nTitel ······· + Jahr\n --------------+-----\n Java ········ + 1996\n Info für Ing. + 1995\n PC Tools ···· + 1993\n Grundlagen ·· + 1991\n Excel ······· + 1991</code>\n|ORDER BY titel ASC; ORDER BY titel DESC; ORDER BY jahr ASC, titel ASC; ORDER BY jahr ASC, titel DESC; *ORDER BY jahr DESC, titel ASC; ORDER BY jahr DESC, titel DESC|  \n<code>\nTitel ······· + Jahr\n --------------+-----\n Java ········ + 1996\n Info für Ing. + 1995\n PC Tools ···· + 1993\n Excel ······· + 1991\n Grundlagen ·· + 1991</code>\n|ORDER BY titel ASC; ORDER BY titel DESC; ORDER BY jahr ASC, titel ASC; ORDER BY jahr ASC, titel DESC; *ORDER BY jahr DESC, titel ASC; ORDER BY jahr DESC, titel DESC  "
						}
					]
				},
				{
					"name": "Duplikateliminierung",
					"title": "Duplikateliminierung",
					"question": [
						{
							"type": "gap",
							"text": "  Geben Sie für die nachfolgenden SQL-Anfragen an, wieviele Datensätze (Tupel) das Ergebnis jeweils beinhaltet! \n\nSELECT ort FROM verlag : |0;1;2;3;4;5;*6;7;8;9| \n\nSELECT DISTINCT ort FROM verlag : |0;1;2;*3;4;5;6;7;8;9| \n\nSELECT name FROM verlag : |0;1;2;3;4;5;*6;7;8;9| \n\nSELECT DISTINCT name FROM verlag : |0;1;2;3;4;5;*6;7;8;9|"
						}
					]
				},
				{
					"name": "Ausgabebearbeitung_Fallunterscheidung",
					"title": "Fallunterscheidung"
				},
				{
					"name": "Join_Beispiel",
					"title": "Join (Beispiel)",
					"question": [
						{
							"type": "gap",
							"text": "Geben Sie das Ergebnis der Join-Anfrage \"Alle Buchtitel mit dem Ort ihres Verlags\" an, in dem Sie für jeden Buchtitel den zugehörigen Ort auswählen oder \"---\", falls das Buch nicht im Anfrageergebnis auftritt.\n \nExcel: |Berlin; *Düsseldorf; München; ---| \nGrundlagen: |*Berlin; Düsseldorf; München; ---| \nKaufverträge: |*Berlin; Düsseldorf; München; ---| \nPC Tools: |Berlin; Düsseldorf; München; *---| \nInfo für Ing.: |Berlin; *Düsseldorf; München; ---| \nSemantik: |Berlin; Düsseldorf; *München; ---| \nJava: |Berlin; *Düsseldorf; München; --- "
						}
					]
				},
				{
					"name": "Join-Anfragen-1",
					"title": "Join-Anfragen (1)",
					"question": [
						{
							"type": "gap",
							"text": "  Formulieren Sie die Anfrage \"Welche Buchtitel wurden von Berliner Verlagen herausgebracht\" in SQL. Vervollständigen Sie dazu die  nachfolgende SQL-Anfrage.\n\n  \nSELECT |buch.id; *buch.titel; verlag.name; verlag.ort| \nFROM buch, |buch; *verlag| \nWHERE |buch.buchid; buch.titel; *buch.verlagsid|  |>;*=;<| |verlag.name; *verlag.verlagsid; verlag.ort| \n |*AND; OR| |verlag.name; verlag.verlagsid; *verlag.ort| = 'Berlin'   "
						}
					]
				},
				{
					"name": "Join-Anfragen-2",
					"title": "Join-Anfragen (2)"
				},
				{
					"name": "Schreibweisen_Joins",
					"title": "Schreibweisen Join"
				},
				{
					"name": "Join-Anfragen-3",
					"title": "Join-Anfragen (3)"
				},
				{
					"name": "OuterJoin",
					"title": "Outer Join"
				}
			]
		}
	]
}